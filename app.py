# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d2Ifd7pH7EXKJ1MKyKkDp2o9XuDAKGRi
"""

import streamlit as st
import pandas as pd
import numpy as np
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load dataset
@st.cache_data
def load_data():
    df = pd.read_csv("copd_15_features_1000_rows.csv")
    return df

data = load_data()

# Prepare data
X = data.drop("COPD_Diagnosis", axis=1)
y = data["COPD_Diagnosis"]

# Encode categorical variables
X = pd.get_dummies(X, drop_first=True)

# Train model
model = LogisticRegression(max_iter=1000)
model.fit(X, y)

# Sidebar
st.sidebar.title("COPD Risk Prediction")
st.sidebar.markdown("Enter the patient information below:")

# User input form
def user_input_features():
    age = st.sidebar.slider("Age", 10, 100, 50)
    gender = st.sidebar.selectbox("Gender", ["Male", "Female"])
    smoking = st.sidebar.selectbox("Smoking History", ["Yes", "No"])
    pollution = st.sidebar.slider("Air Pollution Exposure", 0, 10, 5)
    family = st.sidebar.selectbox("Family History", ["Yes", "No"])
    cough = st.sidebar.selectbox("Chronic Cough", ["Yes", "No"])
    breath = st.sidebar.selectbox("Shortness of Breath", ["Yes", "No"])
    wheeze = st.sidebar.selectbox("Wheezing", ["Yes", "No"])
    sputum = st.sidebar.selectbox("Sputum Production", ["Yes", "No"])
    bmi = st.sidebar.slider("BMI", 10.0, 40.0, 22.0)
    activity = st.sidebar.selectbox("Physical Activity", ["Low", "Medium", "High"])
    exposure = st.sidebar.selectbox("Occupational Exposure", ["Yes", "No"])
    infection = st.sidebar.selectbox("Respiratory Infections", ["Yes", "No"])
    allergies = st.sidebar.selectbox("Allergies", ["Yes", "No"])
    meds = st.sidebar.selectbox("Medication Use", ["Yes", "No"])

    data = {
        'Age': age,
        'Air_Pollution_Exposure': pollution,
        'BMI': bmi,
        'Gender_Male': 1 if gender == "Male" else 0,
        'Smoking_History_Yes': 1 if smoking == "Yes" else 0,
        'Family_History_Yes': 1 if family == "Yes" else 0,
        'Chronic_Cough_Yes': 1 if cough == "Yes" else 0,
        'Shortness_of_Breath_Yes': 1 if breath == "Yes" else 0,
        'Wheezing_Yes': 1 if wheeze == "Yes" else 0,
        'Sputum_Production_Yes': 1 if sputum == "Yes" else 0,
        'Physical_Activity_Low': 1 if activity == "Low" else 0,
        'Physical_Activity_Medium': 1 if activity == "Medium" else 0,
        'Occupational_Exposure_Yes': 1 if exposure == "Yes" else 0,
        'Respiratory_Infections_Yes': 1 if infection == "Yes" else 0,
        'Allergies_Yes': 1 if allergies == "Yes" else 0,
        'Medication_Use_Yes': 1 if meds == "Yes" else 0
    }
    return pd.DataFrame([data])

input_df = user_input_features()

# Match input features to training columns
for col in X.columns:
    if col not in input_df.columns:
        input_df[col] = 0

input_df = input_df[X.columns]  # Ensure column order matches

# Predict
prediction = model.predict(input_df)[0]
prob = model.predict_proba(input_df)[0][1]

# Display
st.title("COPD Prediction Result")
st.write(f"### Prediction: {'Positive' if prediction == 1 else 'Negative'}")
st.write(f"### Probability of COPD: {prob:.2%}")